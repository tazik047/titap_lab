@model DAL.Models.Alternative

@{
	ViewBag.Title = (Model.Id == 0 ? "Создание" : "Редактирование") + " алтенативы";
}

@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()
    
	<div class="form-horizontal">
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.Id)

		<div class="form-group">
			@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Range, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Range, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Range, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.OptimType, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.OptimType, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.OptimType, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Edlzmer, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.Edlzmer, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.Edlzmer, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.ScaleType, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.ScaleType, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.ScaleType, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Save" class="btn btn-default" />
			</div>
		</div>
	</div>
}